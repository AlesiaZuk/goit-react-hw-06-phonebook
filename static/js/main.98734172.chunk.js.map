{"version":3,"sources":["components/Form/Form.module.css","components/Contacts/Contacts.module.css","components/Section/Section.module.css","components/Filter/Filter.module.css","components/Section/Section.js","components/Form/Form.js","components/Contacts/Contacts.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","s","section","Form","handleAddContact","useState","name","setName","number","setNumber","handleChange","e","target","value","onSubmit","preventDefault","form_label","form_input","type","onChange","placeholder","pattern","required","form_button","Contacts","filterContacts","handleDeleteContact","map","contact","contacts_item","contacts_text","contacts_button","id","onClick","Filter","filter","filter_label","filter_input","sectionClass","App","contacts","setContacts","setFilter","useEffect","parsedContacts","JSON","parse","localStorage","getItem","setItem","stringify","find","alert","contactsOld","contactNew","keyGenerate","toLowerCase","includes","elementForRemove","elementForRemoveIndex","indexOf","splice","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.98734172.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_label\":\"Form_form_label__22VBE\",\"form_input\":\"Form_form_input__3-_cR\",\"form_button\":\"Form_form_button__1R4ks\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts_item\":\"Contacts_contacts_item__ytz_0\",\"contacts_text\":\"Contacts_contacts_text__Ccy1o\",\"contacts_button\":\"Contacts_contacts_button__3afiL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3Bxc_\",\"title\":\"Section_title__2mYGh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter_label\":\"Filter_filter_label__1IXpl\",\"filter_input\":\"Filter_filter_input__CDdNp\"};","import PropTypes from 'prop-types';\n\nimport s from './Section.module.css';\n\nfunction Section({ title, children }) {\n  return (\n    <section className={s.section}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\n\nimport s from './Form.module.css';\n\nfunction Form({ handleAddContact }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    handleAddContact({ name, number });\n    setName('');\n    setNumber('');\n  };\n\n  const handleChange = e => {\n    switch (e.target.name) {\n      case 'name':\n        setName(e.target.value);\n        break;\n\n      case 'number':\n        setNumber(e.target.value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label className={s.form_label}>\n        Name:\n        <input\n          className={s.form_input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          placeholder=\"Name Lastname\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n\n      <label className={s.form_label}>\n        Number\n        <input\n          className={s.form_input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          placeholder=\"Phone number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n\n      <button className={s.form_button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nForm.propTypes = {\n  handleAddContact: PropTypes.func.isRequired,\n};\n\nexport default Form;\n","import PropTypes from 'prop-types';\n\nimport s from './Contacts.module.css';\n\nfunction Contacts({ filterContacts, handleDeleteContact }) {\n  return (\n    <ul>\n      {filterContacts.map(contact => (\n        <li className={s.contacts_item} key={contact.id}>\n          <p className={s.contacts_text}>\n            {contact.name}: {contact.number}\n          </p>\n          <button\n            className={s.contacts_button}\n            id={contact.id}\n            type=\"button\"\n            onClick={handleDeleteContact}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContacts.propTypes = {\n  contacts: PropTypes.array,\n  filter: PropTypes.string,\n  handleDeleteContact: PropTypes.func.isRequired,\n};\nexport default Contacts;\n","import PropTypes from 'prop-types';\n\nimport s from './Filter.module.css';\n\nfunction Filter({ filter, handleChange }) {\n  return (\n    <label className={s.filter_label}>\n      Find contacts by name:\n      <input\n        className={s.filter_input}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={handleChange}\n        placeholder=\"Name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import { useState, useEffect } from 'react';\nimport { v4 as keyGenerate } from 'uuid';\n\nimport Section from './components/Section/Section';\nimport Form from './components/Form/Form';\nimport Contacts from './components/Contacts/Contacts';\nimport Filter from './components/Filter/Filter';\n\nconst sectionClass = ['section'];\n\nfunction App() {\n  const [contacts, setContacts] = useState([\n    { id: 'id-1', name: 'Alesia Zuk', number: '459-12-56' },\n    { id: 'id-2', name: 'Ilona Myroniuk ', number: '443-89-12' },\n    { id: 'id-3', name: 'Vladislav Apelhants', number: '645-17-79' },\n    { id: 'id-4', name: 'Artiom Bilodid', number: '227-91-26' },\n    { id: 'id-5', name: 'Aleksandr Korniiets', number: '645-17-79' },\n    { id: 'id-6', name: 'Roman Ilienko ', number: '443-89-12' },\n    { id: 'id-7', name: 'Tatyana Tuluk ', number: '443-89-12' },\n  ]);\n\n  const [filter, setFilter] = useState('');\n\n  function handleChange(e) {\n    setFilter(e.target.value);\n  }\n\n  function handleAddContact({ name, number }) {\n    if (\n      contacts.find(contact => {\n        return contact.name === name;\n      })\n    ) {\n      alert(`${name} is already in contacts`);\n    } else {\n      const contactsOld = contacts;\n      const contactNew = {\n        id: keyGenerate(),\n        name: name,\n        number: number,\n      };\n      setContacts([...contactsOld, contactNew]);\n    }\n  }\n\n  function handleDeleteContact(e) {\n    const elementForRemove = contacts.find(\n      contact => contact.id === e.target.id,\n    );\n    const elementForRemoveIndex = contacts.indexOf(elementForRemove);\n    contacts.splice(elementForRemoveIndex, 1);\n    setContacts([...contacts]);\n  }\n\n  function filterContacts() {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  }\n\n  useEffect(() => {\n    const parsedContacts = JSON.parse(localStorage.getItem('contacts'));\n\n    if (parsedContacts) {\n      setContacts(parsedContacts);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  return (\n    <section className={sectionClass}>\n      <Section title=\"Phonebook\">\n        <Form handleAddContact={handleAddContact}></Form>\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter filter={filter} handleChange={handleChange}></Filter>\n        <Contacts\n          filterContacts={filterContacts()}\n          handleDeleteContact={handleDeleteContact}\n        ></Contacts>\n      </Section>\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}